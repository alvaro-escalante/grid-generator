//######### GRID GENERATOR ################

// Mixins
@mixin mobile  	 { @media (min-width: 480px)  { @content } }
@mixin tablet 	 { @media (min-width: 768px)  { @content } }
@mixin tabletLrg { @media (min-width: 992px)  { @content } }
@mixin desktop	 { @media (min-width: 1200px) { @content } }

// Max width
$gridwidth: 1000px;

// Margins desktop, tablet
$margin-md: 10px;
$margin-sm: 15px;

// Gutters desktop, tablet, mobile
$gutter-md: 20px;
$gutter-sm: 15px;
$gutter-xs: 10px;

// Number of columns
$columns: 12;

.container {
	max-width: $gridwidth;
	margin: 0 auto;
}

// Grid Mixins 
	
// Calculates padding for row and gutter for columns
@mixin calcPadding($padding) {
	padding-right: $padding;
	padding-left:  $padding;
}

// Creates 12 columns and offsets and calculates its width
@mixin createColumns($breakpoint) {
	@for $i from 1 through $columns {
  	.col-#{$breakpoint}-#{$i} { 
  		flex: ((100 / $columns) * $i) * 1%;
  		max-width: ((100 / $columns) * $i) * 1%;
  	}
  	.offset-#{$breakpoint}-#{$i} { margin-left: ((100 / $columns) * $i) * 1% }
	}
}

// Flexbox grid
.row {
	display: flex;
	flex-flow: row wrap;
	transition: all 0.3s ease;
	@include calcPadding($margin-sm)
	&.reverse { flex-flow: row-reverse wrap-reverse }
	&.center { justify-content: center }
}

[class*='col'] {
	width: 100%;
	margin: 1em auto;
	@include calcPadding($gutter-xs)
	&.reverse { flex-flow: column-reverse wrap-reverse }
}

@include createColumns(xs)

// Media queries
@include mobile {
	.row.full { 
		@include calcPadding(0);
		[class*='col'] { @include calcPadding(0) }
	} 
}

@include tablet {
	.row { @include calcPadding($margin-sm) }
	@include createColumns(sm)
}

@include tabletLrg {
	.row { @include calcPadding($margin-md) }
	@include createColumns(md)
}

@include desktop {
	.row { @include calcPadding($margin-md) }
	[class*="col"] { @include calcPadding($gutter-md) }
	@include createColumns(lg)
}

// Utilities
.align-center { text-align: center }
.align-left   { text-align: left }
.align-right  { text-align: right }